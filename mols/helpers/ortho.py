from typing import List

from helpers.latin import generate_all_latin_squares
from structures.square import Square

def ortho2(square1: Square, square2: Square) -> bool:
    """Returns whether two squares are orthogonal"""
    if square1.size != square2.size:
        raise ValueError("Square sizes do not match")

    size = square1.size
    couples = set()
    for i in range(size):
        for j in range(size):
            couples.add((square1.get(i,j), square2.get(i,j)))
    return len(couples) == size*size

def is_mols_set(squares: List[Square]) -> bool:
    """Returns whether all given squares are mutually orthogonal."""
    for i in range(len(squares)):
        for j in range(len(squares)):
            if i != j and not ortho2(squares[i], squares[j]):
                return False
    return True

def generate_full_mols_set_brute_force(square: Square) -> List[Square]:
    """Returns the full MOLS set generated by the given square"""
    result = [square]
    for s in generate_all_latin_squares(square.size, fixed_left=False):
        if ortho2(square, s):
            result.append(s)
    return result